library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity test_minute_counter is
end test_minute_counter;

architecture tb of minute_counter_tb is
    component minute_counter is
        port (
        clk    : in std_logic;
        reset  : in std_logic;
        enable : in std_logic;
        count_minute : out std_logic_vector (6 downto 0);
        count_tens  : out std_logic_vector(6 downto 0);
        count_ones : out std_logic_vector(6 downto 0)
        );
    end component;

    signal clk         : std_logic := '0';
    signal reset       : std_logic := '0';
    signal enable      : std_logic := '1';
    signal count_minute: std_logic_vector(6 downto 0);
    signal count_tens  : std_logic_vector(6 downto 0);
    signal count_ones  : std_logic_vector(6 downto 0);

    constant clk_period : time := 10 ns; -- Clock period of 10 ns (100 MHz)

begin
    -- Instantiate the minute_counter entity
    uut : minute_counter
        port map (
            clk         => clk,
            reset       => reset,
            enable      => enable,
            count_minute => count_minute,
            count_tens  => count_tens,
            count_ones  => count_ones
        );

    -- Clock process
    clk_process : process
    begin
        clk <= '0';
        wait for clk_period / 2;
        clk <= '1';
        wait for clk_period / 2;
    end process;
end architecture tb;

